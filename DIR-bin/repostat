#!/usr/bin/env bash

silent=0
dir=.

report() {
    local path=${1}
    local msg=${2}
    local code="⚠️"

    if [[ "$msg" == "clean" ]]; then
        ((silent == 1)) && return
        code="☑️"
    fi

    echo "$code    $path: $msg"
}

join() {
    local separator="$1"
    local first="$2"
    shift 2
    printf "%s" "$first" "${@/#/$separator}"
}

while getopts "hs" opt; do
    case ${opt} in
    h)
        echo "Usage:"
        echo "    ${0} [-h] [-s] [directory]"
        echo "Options:"
        echo "    -h           This help"
        echo "    -s           Silent mode: no reports on clean repositories"
        echo "    directory    Path where tests should start (default: .)"
        exit 0
        ;;
    s)
        silent=1
        ;;
    esac
done
shift $((OPTIND-1))

if (($# >= 1)); then
    dir=${1}
fi

find ${dir} -name \*.git 2>/dev/null |
while read gitdir; do
    repopath=${gitdir%/.git}
    declare -i untracked=0 conflicted=0 staged=0 notstaged=0
    declare tracking=""
    while IFS='\n' read -n2 status; do
        read data
        if [[ "$status" == "##" ]]; then
            if [[ "$data" =~ \[(.+)\ (.+)\] ]]; then
                tracking="${BASH_REMATCH[1]} by ${BASH_REMATCH[2]}"
            fi
            continue
        fi
        if [[ "$status" == "??" ]]; then
            untracked+=1
        elif [[ "$status" == [DU][DU] || "$status" == [AU][AU] ]]; then
            conflicted+=1
        elif [[ ${status[0]} != " " ]]; then
            staged+=1
        elif [[ "$status" == "?[^ ]" ]]; then
            unstaged+=1
        fi
    done < <(git -C $repopath status --porcelain -b --ignore-submodules 2>/dev/null)
    if ((staged+unstaged+conflicted+untracked==0)); then
        if [[ -n $tracking ]]; then
            report ${repopath} "$tracking"
        else
            report ${repopath} clean
        fi
    else
        info=()
        [[ -n $tracking ]] && info+=("$tracking")
        (( staged > 0 )) && info+=("$staged staged")
        (( unstaged > 0 )) && info+=("$unstaged unstaged")
        (( conflicted > 0 )) && info+=("$conflicted conflicted")
        (( untracked > 0 )) && info+=("$untracked untracked")
        report "$repopath" "$(join ", " "${info[@]}")"
    fi
done
